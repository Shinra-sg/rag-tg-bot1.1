import pool from "./db";
import { 
  grantDocumentAccess, 
  revokeDocumentAccess, 
  checkDocumentAccess, 
  getDocumentAccessList,
  getAccessStatistics 
} from "./documentAccess";

async function testDocumentAccess() {
  try {
    console.log("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã —Ä–∞–∑–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–∞ –∫ –¥–æ–∫—É–º–µ–Ω—Ç–∞–º...\n");

    // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ç–∞–±–ª–∏—Ü–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    console.log("1. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã document_access...");
    const tableCheck = await pool.query(`
      SELECT table_name 
      FROM information_schema.tables 
      WHERE table_schema = 'public' 
      AND table_name = 'document_access'
    `);
    
    if (tableCheck.rows.length === 0) {
      console.log("‚ùå –¢–∞–±–ª–∏—Ü–∞ document_access –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: npm run setup:access");
      return;
    }
    console.log("‚úÖ –¢–∞–±–ª–∏—Ü–∞ document_access —Å—É—â–µ—Å—Ç–≤—É–µ—Ç");

    // 2. –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
    console.log("\n2. –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤...");
    const docsResult = await pool.query("SELECT id, original_name FROM documents LIMIT 3");
    if (docsResult.rows.length === 0) {
      console.log("‚ùå –ù–µ—Ç –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö");
      return;
    }
    console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ ${docsResult.rows.length} –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤`);

    // 3. –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–æ–≤
    console.log("\n3. –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∞–¥–º–∏–Ω–æ–≤...");
    const adminsResult = await pool.query("SELECT id, username, user_id FROM admins WHERE user_id IS NOT NULL LIMIT 1");
    if (adminsResult.rows.length === 0) {
      console.log("‚ùå –ù–µ—Ç –∞–¥–º–∏–Ω–æ–≤ —Å user_id –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö");
      return;
    }
    console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ ${adminsResult.rows.length} –∞–¥–º–∏–Ω–æ–≤`);

    const testDoc = docsResult.rows[0];
    const testAdmin = adminsResult.rows[0];
    const testUsername = "testuser";

    // 4. –¢–µ—Å—Ç –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–∞
    console.log(`\n4. –¢–µ—Å—Ç –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–∞...`);
    console.log(`–î–æ–∫—É–º–µ–Ω—Ç: ${testDoc.original_name} (ID: ${testDoc.id})`);
    console.log(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: @${testUsername}`);
    console.log(`–ê–¥–º–∏–Ω: @${testAdmin.username} (ID: ${testAdmin.id}, user_id: ${testAdmin.user_id})`);

    const grantResult = await grantDocumentAccess(testDoc.id, testUsername, testAdmin.user_id);
    if (grantResult.success) {
      console.log(`‚úÖ ${grantResult.message}`);
    } else {
      console.log(`‚ùå ${grantResult.message}`);
    }

    // 5. –¢–µ—Å—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–∞
    console.log(`\n5. –¢–µ—Å—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–∞...`);
    const hasAccess = await checkDocumentAccess(testDoc.id, testUsername);
    console.log(`–î–æ—Å—Ç—É–ø –¥–ª—è @${testUsername}: ${hasAccess ? '‚úÖ –ï—Å—Ç—å' : '‚ùå –ù–µ—Ç'}`);

    // 6. –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –¥–æ—Å—Ç—É–ø–∞
    console.log(`\n6. –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –¥–æ—Å—Ç—É–ø–∞...`);
    const accessList = await getDocumentAccessList(testDoc.id);
    if (accessList.success) {
      console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ ${accessList.accessList.length} –∑–∞–ø–∏—Å–µ–π –¥–æ—Å—Ç—É–ø–∞`);
      accessList.accessList.forEach((access: any, i: number) => {
        console.log(`  ${i+1}. @${access.username} (–ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω @${access.granted_by_username})`);
      });
    } else {
      console.log(`‚ùå ${accessList.message}`);
    }

    // 7. –¢–µ—Å—Ç –æ—Ç–∑—ã–≤–∞ –¥–æ—Å—Ç—É–ø–∞
    console.log(`\n7. –¢–µ—Å—Ç –æ—Ç–∑—ã–≤–∞ –¥–æ—Å—Ç—É–ø–∞...`);
    const revokeResult = await revokeDocumentAccess(testDoc.id, testUsername);
    if (revokeResult.success) {
      console.log(`‚úÖ ${revokeResult.message}`);
    } else {
      console.log(`‚ùå ${revokeResult.message}`);
    }

    // 8. –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –¥–æ—Å—Ç—É–ø –æ—Ç–æ–∑–≤–∞–Ω
    console.log(`\n8. –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç–∑—ã–≤–∞ –¥–æ—Å—Ç—É–ø–∞...`);
    const hasAccessAfterRevoke = await checkDocumentAccess(testDoc.id, testUsername);
    console.log(`–î–æ—Å—Ç—É–ø –¥–ª—è @${testUsername} –ø–æ—Å–ª–µ –æ—Ç–∑—ã–≤–∞: ${hasAccessAfterRevoke ? '‚ùå –ï—Å—Ç—å' : '‚úÖ –ù–µ—Ç'}`);

    // 9. –¢–µ—Å—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    console.log(`\n9. –¢–µ—Å—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –¥–æ—Å—Ç—É–ø–∞...`);
    const stats = await getAccessStatistics();
    if (stats.success) {
      console.log(`‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—É—á–µ–Ω–∞:`);
      console.log(`  - –í—Å–µ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤: ${stats.stats.totalDocuments}`);
      console.log(`  - –í—Å–µ–≥–æ –¥–æ—Å—Ç—É–ø–æ–≤: ${stats.stats.totalAccessGrants}`);
      console.log(`  - –£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${stats.stats.uniqueUsersWithAccess}`);
      console.log(`  - –î–æ—Å—Ç—É–ø–æ–≤ –∑–∞ 7 –¥–Ω–µ–π: ${stats.stats.recentAccessGrants}`);
    } else {
      console.log(`‚ùå ${stats.message}`);
    }

    console.log("\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!");
    console.log("üìã –°–∏—Å—Ç–µ–º–∞ —Ä–∞–∑–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!");

  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:", error);
  } finally {
    await pool.end();
  }
}

// –ó–∞–ø—É—Å–∫ –µ—Å–ª–∏ —Ñ–∞–π–ª –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –Ω–∞–ø—Ä—è–º—É—é
if (require.main === module) {
  testDocumentAccess();
}

export default testDocumentAccess; 