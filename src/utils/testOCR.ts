import { extractTextFromImage, parseImageDocument, isSupportedImageFormat, getSupportedImageFormats } from './ocrParser';
import * as path from 'path';

async function testOCR() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ OCR —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏...\n');

  // –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã—Ö —Ñ–æ—Ä–º–∞—Ç–æ–≤
  console.log('üìã –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π:');
  const formats = getSupportedImageFormats();
  formats.forEach(format => console.log(`  - ${format}`));
  console.log('');

  // –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ—É–Ω–∫—Ü–∏–∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ñ–æ—Ä–º–∞—Ç–∞
  console.log('üîç –¢–µ—Å—Ç –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ñ–æ—Ä–º–∞—Ç–æ–≤:');
  const testFiles = [
    'test.jpg',
    'document.png',
    'image.bmp',
    'file.pdf',
    'text.txt'
  ];

  testFiles.forEach(file => {
    const isImage = isSupportedImageFormat(file);
    console.log(`  ${file}: ${isImage ? '‚úÖ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ' : '‚ùå –ù–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ'}`);
  });
  console.log('');

  // –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ OCR (–µ—Å–ª–∏ –µ—Å—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ)
  const testImagePath = path.join(__dirname, '../data/raw/test_image.jpg');
  
  try {
    if (require('fs').existsSync(testImagePath)) {
      console.log('üñºÔ∏è –¢–µ—Å—Ç OCR —Å —Ä–µ–∞–ª—å–Ω—ã–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º:');
      console.log(`  –ü—É—Ç—å: ${testImagePath}`);
      
      const ocrResult = await extractTextFromImage(testImagePath);
      
      if (ocrResult.success) {
        console.log(`  ‚úÖ OCR —É—Å–ø–µ—à–µ–Ω –º–µ—Ç–æ–¥–æ–º: ${ocrResult.method}`);
        console.log(`  üìù –†–∞—Å–ø–æ–∑–Ω–∞–Ω–æ —Å–∏–º–≤–æ–ª–æ–≤: ${ocrResult.text?.length || 0}`);
        console.log(`  üìÑ –ü–µ—Ä–≤—ã–µ 100 —Å–∏–º–≤–æ–ª–æ–≤: ${ocrResult.text?.substring(0, 100)}...`);
      } else {
        console.log(`  ‚ùå OCR –æ—à–∏–±–∫–∞: ${ocrResult.error}`);
      }
    } else {
      console.log('‚ö†Ô∏è –¢–µ—Å—Ç–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ. –°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª data/raw/test_image.jpg –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ —Ç–µ—Å—Ç–∞.');
    }
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ OCR:', error);
  }

  console.log('\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç –µ—Å–ª–∏ —Ñ–∞–π–ª –≤—ã–∑–≤–∞–Ω –Ω–∞–ø—Ä—è–º—É—é
if (require.main === module) {
  testOCR().catch(console.error);
}

export { testOCR };
