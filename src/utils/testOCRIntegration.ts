import { parseDocument } from './documentParsers';
import * as path from 'path';

async function testOCRIntegration() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ OCR —Å —Å–∏—Å—Ç–µ–º–æ–π –ø–∞—Ä—Å–∏–Ω–≥–∞...\n');

  const testImagePath = path.join(__dirname, '../data/raw/test_image.jpg');
  
  try {
    console.log(`üñºÔ∏è –¢–µ—Å—Ç–∏—Ä—É—é –æ–±—Ä–∞–±–æ—Ç–∫—É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: ${testImagePath}`);
    
    // –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª–Ω—É—é –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é —á–µ—Ä–µ–∑ parseDocument
    const result = await parseDocument(testImagePath);
    
    console.log('‚úÖ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ —á–µ—Ä–µ–∑ —Å–∏—Å—Ç–µ–º—É –ø–∞—Ä—Å–∏–Ω–≥–∞!');
    console.log(`üìù –ò–∑–≤–ª–µ—á–µ–Ω–æ —Å–∏–º–≤–æ–ª–æ–≤: ${result.content.length}`);
    console.log(`üìÑ –ü–µ—Ä–≤—ã–µ 200 —Å–∏–º–≤–æ–ª–æ–≤:`);
    console.log('‚îÄ'.repeat(50));
    console.log(result.content.substring(0, 200));
    console.log('‚îÄ'.repeat(50));
    
    console.log('\nüìä –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ:');
    console.log(`  - –ó–∞–≥–æ–ª–æ–≤–æ–∫: ${result.metadata.title}`);
    console.log(`  - –°–æ–∑–¥–∞–Ω: ${result.metadata.created}`);
    console.log(`  - –ò–∑–º–µ–Ω–µ–Ω: ${result.metadata.modified}`);
    
    console.log('\n‚úÖ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è OCR —Å —Å–∏—Å—Ç–µ–º–æ–π –ø–∞—Ä—Å–∏–Ω–≥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏:', error);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç –µ—Å–ª–∏ —Ñ–∞–π–ª –≤—ã–∑–≤–∞–Ω –Ω–∞–ø—Ä—è–º—É—é
if (require.main === module) {
  testOCRIntegration().catch(console.error);
}

export { testOCRIntegration };
