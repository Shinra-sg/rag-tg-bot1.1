import pool from "./db";
import { hasAnyAccess } from "../utils/searchWithAccess";
import { 
  grantAccessToAllDocuments,
  revokeAccessFromAllDocuments,
  getAllUsersWithAccess,
  getAllUsersWithoutAccess,
  getAccessStatistics
} from "../utils/documentAccess";

async function testNewAccessSystem() {
  try {
    console.log("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã –¥–æ—Å—Ç—É–ø–∞ (–≤—Å–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –∑–∞–∫—Ä—ã—Ç—ã –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)...\n");

    // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –¥–æ—Å—Ç—É–ø–∞
    console.log("1. üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–æ—Å—Ç—É–ø–∞:");
    const stats = await getAccessStatistics();
    if (stats.success) {
      console.log(`   üìÑ –í—Å–µ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤: ${stats.stats.totalDocuments}`);
      console.log(`   üîë –í—Å–µ–≥–æ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã—Ö –¥–æ—Å—Ç—É–ø–æ–≤: ${stats.stats.totalAccessGrants}`);
      console.log(`   üë• –£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –¥–æ—Å—Ç—É–ø–æ–º: ${stats.stats.uniqueUsersWithAccess}`);
      console.log(`   üÜï –î–æ—Å—Ç—É–ø–æ–≤ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π: ${stats.stats.recentAccessGrants}`);
    } else {
      console.log(`   ‚ùå –û—à–∏–±–∫–∞: ${stats.message}`);
    }

    // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –¥–æ—Å—Ç—É–ø–æ–º
    console.log("\n2. üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å –¥–æ—Å—Ç—É–ø–æ–º:");
    const usersWithAccess = await getAllUsersWithAccess();
    if (usersWithAccess.success) {
      if (usersWithAccess.users.length === 0) {
        console.log("   üì≠ –°–ø–∏—Å–æ–∫ –ø—É—Å—Ç - –Ω–∏–∫—Ç–æ –Ω–µ –∏–º–µ–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –¥–æ–∫—É–º–µ–Ω—Ç–∞–º");
      } else {
        usersWithAccess.users.forEach((user, i) => {
          console.log(`   ${i+1}. @${user.username} - ${user.document_count} –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤`);
        });
      }
    } else {
      console.log(`   ‚ùå –û—à–∏–±–∫–∞: ${usersWithAccess.message}`);
    }

    // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –±–µ–∑ –¥–æ—Å—Ç—É–ø–∞
    console.log("\n3. üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –±–µ–∑ –¥–æ—Å—Ç—É–ø–∞:");
    const usersWithoutAccess = await getAllUsersWithoutAccess();
    if (usersWithoutAccess.success) {
      if (usersWithoutAccess.users.length === 0) {
        console.log("   üì≠ –°–ø–∏—Å–æ–∫ –ø—É—Å—Ç - –≤—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –∏–º–µ—é—Ç –¥–æ—Å—Ç—É–ø –∏–ª–∏ –Ω–µ –±—ã–ª–æ –ø–æ–∏—Å–∫–æ–≤");
      } else {
        usersWithoutAccess.users.forEach((user, i) => {
          console.log(`   ${i+1}. @${user.username} - ${user.search_count} –ø–æ–∏—Å–∫–æ–≤`);
        });
      }
    } else {
      console.log(`   ‚ùå –û—à–∏–±–∫–∞: ${usersWithoutAccess.message}`);
    }

    // 4. –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –¥–æ—Å—Ç—É–ø–∞ –¥–ª—è –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    console.log("\n4. üîí –¢–µ—Å—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–∞:");
    const testUsername = "testuser_nonexistent";
    const hasAccess = await hasAnyAccess(testUsername);
    console.log(`   –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @${testUsername}: ${hasAccess ? '‚úÖ –ï—Å—Ç—å –¥–æ—Å—Ç—É–ø' : '‚ùå –ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞'}`);

    // 5. –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    console.log("\n5. üëë –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∞–¥–º–∏–Ω–æ–≤:");
    const adminsResult = await pool.query("SELECT id, username, user_id FROM admins WHERE user_id IS NOT NULL LIMIT 1");
    if (adminsResult.rows.length === 0) {
      console.log("   ‚ùå –ù–µ—Ç –∞–¥–º–∏–Ω–æ–≤ —Å user_id –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö");
      return;
    }
    const testAdmin = adminsResult.rows[0];
    console.log(`   ‚úÖ –ù–∞–π–¥–µ–Ω –∞–¥–º–∏–Ω: @${testAdmin.username} (ID: ${testAdmin.id}, user_id: ${testAdmin.user_id})`);

    // 6. –¢–µ—Å—Ç–∏—Ä—É–µ–º –º–∞—Å—Å–æ–≤–æ–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–∞
    console.log("\n6. üîì –¢–µ—Å—Ç –º–∞—Å—Å–æ–≤–æ–≥–æ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–∞:");
    const testUser = "testuser_mass_access";
    const grantResult = await grantAccessToAllDocuments(testUser, testAdmin.user_id);
    if (grantResult.success) {
      console.log(`   ‚úÖ ${grantResult.message}`);
      console.log(`   üìä –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–æ –¥–æ—Å—Ç—É–ø–æ–≤: ${grantResult.grantedCount}`);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –¥–æ—Å—Ç—É–ø –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω
      const hasAccessAfterGrant = await hasAnyAccess(testUser);
      console.log(`   üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –ø–æ—Å–ª–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è: ${hasAccessAfterGrant ? '‚úÖ –ï—Å—Ç—å' : '‚ùå –ù–µ—Ç'}`);
      
      // 7. –¢–µ—Å—Ç–∏—Ä—É–µ–º –º–∞—Å—Å–æ–≤—ã–π –æ—Ç–∑—ã–≤ –¥–æ—Å—Ç—É–ø–∞
      console.log("\n7. üîí –¢–µ—Å—Ç –º–∞—Å—Å–æ–≤–æ–≥–æ –æ—Ç–∑—ã–≤–∞ –¥–æ—Å—Ç—É–ø–∞:");
      const revokeResult = await revokeAccessFromAllDocuments(testUser);
      if (revokeResult.success) {
        console.log(`   ‚úÖ ${revokeResult.message}`);
        console.log(`   üìä –û—Ç–æ–∑–≤–∞–Ω–æ –¥–æ—Å—Ç—É–ø–æ–≤: ${revokeResult.revokedCount}`);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –¥–æ—Å—Ç—É–ø –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –æ—Ç–æ–∑–≤–∞–Ω
        const hasAccessAfterRevoke = await hasAnyAccess(testUser);
        console.log(`   üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –ø–æ—Å–ª–µ –æ—Ç–∑—ã–≤–∞: ${hasAccessAfterRevoke ? '‚úÖ –ï—Å—Ç—å' : '‚ùå –ù–µ—Ç'}`);
      } else {
        console.log(`   ‚ùå ${revokeResult.message}`);
      }
    } else {
      console.log(`   ‚ùå ${grantResult.message}`);
    }

    console.log("\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã –¥–æ—Å—Ç—É–ø–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!");
    console.log("\nüìã –í—ã–≤–æ–¥—ã:");
    console.log("   ‚Ä¢ –í—Å–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –∑–∞–∫—Ä—ã—Ç—ã –¥–ª—è –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π");
    console.log("   ‚Ä¢ –î–æ—Å—Ç—É–ø –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ —Ç–∞–±–ª–∏—Ü—É document_access");
    console.log("   ‚Ä¢ –§—É–Ω–∫—Ü–∏—è hasAnyAccess –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç false –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –±–µ–∑ –¥–æ—Å—Ç—É–ø–∞");
    console.log("   ‚Ä¢ –ú–∞—Å—Å–æ–≤–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–æ–º —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ");

  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:", error);
  } finally {
    await pool.end();
  }
}

// –ó–∞–ø—É—Å–∫ –µ—Å–ª–∏ —Ñ–∞–π–ª –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –Ω–∞–ø—Ä—è–º—É—é
if (require.main === module) {
  testNewAccessSystem();
}

export { testNewAccessSystem };
